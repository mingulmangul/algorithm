"""
11057번 오르막 수: https://www.acmicpc.net/problem/11057

1 -> 10
2 -> 10 + 9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 = 55
3 ->
    c[0] = 0, 10+9+...+1 = 55
    c[0] = 1, 9+8+7+...+1 = 45
    c[0] = 2, 8+7+...+1 = 36
    c[0] = 3, 7+...+1 = 28
    c[0] = 4, 6+...+1 = 21
    c[0] = 5, 5+...+1 = 15
    c[0] = 6, 4+...+1 = 10
    c[0] = 7, 6
    c[0] = 8, 3
    c[0] = 9, 1
    10*1 + 9*2 + 8*3 + ... + 2*9 + 1*10
4 ->
    c[0] = 0, 10*1 + 9*2 + 8*3 + ... + 2*9 + 1*10 = 220
    c[0] = 1, 9*1 + 8*2 + 7*3 + ... + 2*8 + 1*9 = 165
    c[0] = 2, 8*1 + 7*2 + ... + 2*7 + 1*8 = 120
    c[0] = 3, 7*1 + ... + 2*6 + 1*7
    c[0] = 4, 6*1 + ... + 2*5 + 1*6
    c[0] = 5, 5*1 + ... + 2*4 + 1*5
    c[0] = 6, 4*1 + ... + 2*3 + 1*4
    c[0] = 7, 3*1 + 2*2 + 1*3
    c[0] = 8, 2*1 + 1*2
    c[0] = 9, 1*1
    
- 2차원 dp 배열
dp[i][j] = sum(dp[i-1][j:])
"""
import sys
# 내 풀이
def solution1():
    N = int(input())
    if N == 1:
        print(10)
        sys.exit(0)
        
    # 초기화
    dp = [[0] * 10 for _ in range(N-1)]
    for i in range(10):
        dp[0][i] = 10 - i
    # DP
    for i in range(1, N-1):
        for j in range(10):
            dp[i][j] = (sum(dp[i-1][j:])) % 10007

    print(sum(dp[N-2]) % 10007)
    
# 다른 풀이
def solution2():
    N = int(input())
    # 초기화
    dp = [1] * 10
    # DP
    for i in range(N):
        for j in range(1, 10):
            dp[j] += dp[j-1]
    print(dp[9] % 10007)